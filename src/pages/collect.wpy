<template>
<view class="wrap" @tap="cancelCollect">
    <repeat for="{{collect}}" key="index" item="item">
        <view class="item-wrap">
            <job-item :listItem="item" type="2"></job-item>
            <view class="btn-wrap">
                <button hover-class="btn-active" data-id="{{item.id}}" data-btnindex="{{index}}">取消收藏</button>
            </view>
        </view>
    </repeat>
</view>
</template>

<script>
import wepy from 'wepy'
import Loading from '../components/loading'
import Request from '../utils/request'
import JobItem from '../components/job-list-item'

export default class Collect extends wepy.page {
    config = {
        backgroundTextStyle: 'dark',
        navigationBarTitleText: '收藏职位'
    }

    request = new Request()

    userId = ''

    page = {
        index: 1,
        busy: false,
        hasNot: false
    }

    getCollectJob (page = 1, pageSize = 8) {
        return this.request.Get({
            userId: this.userId,
            page: page,
            pageSize: pageSize
        }, '/Collect/getInviteList')
    }

    components = {
        'job-item': JobItem
    }

    data = {
        collect: []
    }

    methods = {
        cancelCollect (e) {
            if (e.target.dataset.btnindex != undefined) {
                this.request.Post({
                    userId: this.userId,
                    inviteWorkId: e.target.dataset.id,
                    status: 0
                }, '/InviteWork/collect')
                .then(ret => {
                    this.collect.splice(Number.parseInt(e.target.dataset.btnindex), 1)
                    this.$apply()
                })
            }
        }
    }

    onReachBottom () {
        if (this.page.busy) {
            return false
        }
        if (this.page.hasNot) {
            return false
        }
        this.page.index++
        this.page.busy = true
        this.getCollectJob(this.page.index)
        .then(({data}) => {
            if (Array.isArray(data) && data.length === 0) {
                this.hasNot = true
            }
            this.collect = [...this.collect, ...data]
            this.$apply()
        })
    }

    onPullDownRefresh () {
        this.getCollectJob()
        .then(({data}) => {
            this.collect = data
            wepy.stopPullDownRefresh()
            this.$apply()
        })
    }

    onLoad (params) {
        this.userId = params.id
        this.getCollectJob()
        .then(({data}) => {
            this.collect = data
            this.$apply()
        })
    }

    onUnload () {
        this.page.index = 1
        this.page.busy = false
        this.page.hasNot = false
    }

}
</script>

<style lang="less">
@import url('../utils/global');

page {
    background-color: @bg-color;
}
.wrap {
    width: 100%;
    height: 100%;
    background-color: @bg-color;
    padding: 16rpx 20rpx;
    flex-direction: column;
    box-sizing: border-box;
}
.item-wrap {
    width: 100%;
    flex-direction: column;
    background-color: #fff;
    margin: 16rpx 0;
    .btn-wrap {
        width: 100%;
        height: 88rpx;
        border-top: 1px solid @bd-color;
        align-items: center;
        justify-content: center;
        button {
            width: 670rpx;
            height: 74rpx;
            line-height: 74rpx;
            background-color: @generate-color;
            color: #fff;
            font-size: bold;
            border-radius: 16rpx;
            will-change: auto;
            transform: translateZ(0);
            transition: transform 100ms linear;
            margin: 0;
            font-size: 28rpx;
        }
        .btn-active {
            transform: scale(0.9);
        }
    }
}
</style>
