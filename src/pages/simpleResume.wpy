<template>
<view class="block">
    <view class="block-title">基本信息<text>必填</text></view>
    <view class="block-content">
        <view class="base-image">
            <image src="{{page.headerImageFull==''?'../image/uploadHeaderPic.png':page.headerImageFull}}" mode="aspectFill" />
            <view>
                <text class="header-image-name">简历头像</text>
                <text class="header-image-text">请上传求职者本人的真是、清晰图片
                建议尺寸：360*360像素</text>
            </view>
        </view>
        <view class="base-input">
            <text class="base-label">真实姓名</text>
            <input value="{{page.name}}" class="base-msg" max-length="10" bindinput="bindName" />
        </view>
        <picker mode="selector" class="base-picker" range="{{base.sex}}" bindchange="bindSex" value="{{page.sex}}" range-key="text">
            <view class="picker-wrap">
                <view class="picker-label">性别</view>
                <view class="picker-text">{{base.sex[page.sex].text}}</view>
            </view>
        </picker>
        <picker mode="date" class="base-picker" fields="year" start="1960" end="2017" bindchange="bindBirth" value="{{birthYear}}">
            <view class="picker-wrap">
                <view class="picker-label">出生年份</view>
                <view class="picker-text">{{page.birthYear}}</view>
            </view>
        </picker>
        <picker mode="selector" class="base-picker" range="{{base.edu}}" bindchange="bindEdu" range-key="text">
            <view class="picker-wrap">
                <view class="picker-label">最高学历</view>
                <view class="picker-text">{{page.educationTypeName}}</view>
            </view>
        </picker>
        <picker mode="selector" class="base-picker" range="{{base.exp}}" bindchange="bindExp" range-key="text">
            <view class="picker-wrap">
                <view class="picker-label">健身行业从业经验</view>
                <view class="picker-text">{{page.experienceTypeName}}</view>
            </view>
        </picker>
        <view class="base-input">
            <text class="base-label">手机号码</text>
            <input value="{{page.tel}}" type="number" class="base-msg" max-length="11" bindinput="bindPhone" />
        </view>
        <picker mode="selector" class="base-picker" range="{{base.state}}" bindchange="bindState" value="{{page.workStatus}}" range-key="text">
            <view class="picker-wrap">
                <view class="picker-label">任职状态</view>
                <view class="picker-text">{{base.state[page.workStatus].text}}</view>
            </view>
        </picker>
        <view class="base-textarea">
            <text>自我介绍</text>
            <textarea value="{{page.intro}}" bindinput="bindIntro" cursor-spacing="200" maxlength="60" placeholder-style="color: #aaa"
            placeholder="提醒：请勿输入手机号码、座机、微信号、邮箱及网址链接，否则职位将被系统自动删除，且不可恢复"></textarea>
            <text class="num-count">{{page.intro.length}}/60</text>
        </view>
    </view>
    <view class="block-title">期望工作<text>必填</text></view>
    <view class="block-content">
        <picker mode="selector" range="{{base.type}}" range-key="text" class="base-picker" bindchange="bindType">
            <view class="picker-wrap">
                <view class="picker-label">公司类型</view>
                <view class="picker-text">{{page.companyTypeName}}</view>
            </view>
        </picker>
        <picker mode="multiSelector" range="{{job}}" range-key="name" class="base-picker" bindcolumnchange="bindJobColumn" bindchange="bindJob" value="{{jobIndex}}">
            <view class="picker-wrap">
                <view class="picker-label">期望职位</view>
                <view class="picker-text">{{page.workName}}</view>
            </view>
        </picker>
        <picker mode="multiSelector" range="{{city}}" range-key="text" class="base-picker" bindcolumnchange="bindCityColumn" bindchange="bindCity" value="{{cityIndex}}">
            <view class="picker-wrap">
                <view class="picker-label">期望城市</view>
                <view class="picker-text">{{page.cityName}}</view>
            </view>
        </picker>
        <picker mode="selector" range="{{base.salary}}" range-key="text" class="base-picker" bindchange="bindSalary">
            <view class="picker-wrap">
                <view class="picker-label">期望薪资</view>
                <view class="picker-text">{{page.salaryTypeName}}</view>
            </view>
        </picker>
    </view>
    <view class="footer">
        <button @tap="cancel" class="left" plain hover-class='btn-active'>取消</button>
        <button @tap="sure" class="right" hover-class='btn-active'>保存</button>
    </view>
</view>
</template>

<script>
import wepy from 'wepy'
import Request from '../utils/request'

export default class SimpleResume extends wepy.page {
    config = {
        backgroundTextStyle: 'dark',
        navigationBarTitleText: '简历',
        enablePullDownRefresh: false,
        disableScroll: false
    }

    showModal ({title = '提示', content = '是否删除该选项'}) {
        return new Promise((resolve, reject) => {
            wepy.showModal({
                title: title,
                content: content,
                cancelColor: '#ddd',
                confirmColor: '#40c4ff',
                success: ret => {
                    if (ret.confirm) {
                        resolve('点击确定')
                    }
                    if (ret.cancel) {
                        reject(new Error('用户取消'))
                    }
                },
                fail: err => {
                    reject(err)
                }
            })
        })
    }

    request = new Request()

    storage = {
        city: wepy.getStorageSync('region'),
        job: wepy.getStorageSync('workList')
    }

    data = {
        page: {
            // userId: wepy.getStorageSync('userId'),
            resumeId: '',
            headerImage: '',
            headerImageFull: '',
            name: '',
            sex: '',
            cityId: '',
            birthYear: '',
            educationType: '',
            educationTypeName: '',
            experienceType: '',
            experienceTypeName: '',
            tel: '',
            workStatus: '',
            intro: '',
            companyType: '',
            companyTypeName: '',
            salaryType: '',
            salaryTypeName: '',
            parentWorkClassId: '',
            workClassId: '',
            workId: '',
            tagList: [],
            workList: [],
            schoolList: [],
            oldShowUrl: [],
            showUrl: []
        },
        jobIndex: [0, 0, 0],
        cityIndex: [0, 0],
        base: {
            sex: [
                {
                    'value': 0,
                    'text': '男'
                }, {
                    'value': 1,
                    'text': '女'
                }
            ],
            edu: [
                {
                    'value': 2,
                    'text': '大专'
                }, {
                    'value': 3,
                    'text': '本科'
                }, {
                    'value': 4,
                    'text': '硕士'
                }, {
                    'value': 5,
                    'text': '博士'
                }, {
                    'value': 1,
                    'text': '其他'
                }
            ],
            exp: [
                {
                    'value': 1,
                    'text': '1年以下'
                }, {
                    'value': 2,
                    'text': '1~2年'
                }, {
                    'value': 3,
                    'text': '3~5年'
                }, {
                    'value': 4,
                    'text': '6~8年'
                }, {
                    'value': 5,
                    'text': '8~10年'
                }, {
                    'value': 6,
                    'text': '10年以上'
                }
            ],
            level: [
                {
                    'value': 1,
                    'text': '初级'
                }, {
                    'value': 2,
                    'text': '中级'
                }, {
                    'value': 3,
                    'text': '高级'
                }, {
                    'value': 4,
                    'text': '资深'
                }, {
                    'value': 5,
                    'text': '导师级'
                }
            ],
            state: [
                {
                    'value': 0,
                    'text': '离职'
                }, {
                    'value': 1,
                    'text': '在职'
                }
            ],
            type: [
                {
                    value: 1,
                    text: '俱乐部'
                }, {
                    value: 2,
                    text: '工作室'
                }, {
                    value: 3,
                    text: '瑜伽馆'
                }, {
                    value: 4,
                    text: '教育培训'
                }, {
                    value: 5,
                    text: '器械设备'
                }, {
                    value: 6,
                    text: '媒体资讯'
                }, {
                    value: 7,
                    text: '会展／活动／赛事'
                }, {
                    value: 8,
                    text: '互联网'
                }, {
                    value: 9,
                    text: '其他'
                }
            ],
            salary: [
                {
                    value: 1,
                    text: '3~5K'
                }, {
                    value: 2,
                    text: '6~8K'
                }, {
                    value: 3,
                    text: '9~12K'
                }, {
                    value: 4,
                    text: '13~18K'
                }, {
                    value: 5,
                    text: '19~25K'
                }, {
                    value: 6,
                    text: '26~30K'
                }, {
                    value: 7,
                    text: '31~40K'
                }, {
                    value: 8,
                    text: '41~50K'
                }, {
                    value: 9,
                    text: '50K以上'
                }
            ]
        },
        city: [this.storage.city, this.storage.city[0].children],
        job: [this.storage.job, this.storage.job[0].list, this.storage.job[0].list[0].workList]
    }

    methods = {
        bindName (e) {
            this.page.name = e.detail.value
        },
        bindSex (e) {
            this.page.sex = e.detail.value
        },
        bindBirth (e) {
            this.page.birthYear = e.detail.value
        },
        bindEdu (e) {
            this.page.educationType = this.base.edu[e.detail.value].value
            this.page.educationTypeName = this.base.edu[e.detail.value].text
        },
        bindExp (e) {
            this.page.experienceType = this.base.exp[e.detail.value].value
            this.page.experienceTypeName = this.base.exp[e.detail.value].text
        },
        bindPhone (e) {
            this.page.tel = e.detail.value
        },
        bindState (e) {
            this.page.workStatus = e.detail.value
        },
        bindIntro (e) {
            this.page.intro = e.detail.value
        },
        bindType (e) {
            this.page.companyType = this.base.type[e.detail.value].value
            this.page.companyTypeName = this.base.type[e.detail.value].text
        },
        bindCityColumn (e) {
            if (e.detail.column === 0) {
                this.city[1] = this.city[0][e.detail.value].children
            }
        },
        bindCity (e) {
            this.cityIndex = e.detail.value
            this.page.cityName = this.city[1][this.cityIndex[1]].text
            this.page.cityId = this.city[1][this.cityIndex[1]].value
        },
        bindJobColumn (e) {
            if (e.detail.column === 0) {
                this.job[1] = this.job[0][e.detail.value].list
                this.job[2] = this.job[0][e.detail.value].list[0].workList
            }
            if (e.detail.column === 1) {
                this.job[2] = this.job[1][e.detail.value].workList
            }
        },
        bindJob (e) {
            this.jobIndex = e.detail.value
            this.page.workName = this.job[2][this.jobIndex[2]].name
            this.page.parentWorkClassId = this.job[0][this.jobIndex[0]].id
            this.page.workClassId = this.job[1][this.jobIndex[1]].id
            this.page.workId = this.job[2][this.jobIndex[2]].id
        },
        bindSalary (e) {
            this.page.salaryType = this.base.salary[e.detail.value].value
            this.page.salaryTypeName = this.base.salary[e.detail.value].text
        },
        cancel () {
            this.showModal({content: '确定放弃编辑简历吗？'})
            .then(ret => {
                wepy.reLaunch({url: './jobs'})
            })
        },
        sure () {
            // this.page.userId = wepy.getStorageSync('userId')
            this.page.userId = '294'
            this.request.Post(this.page, '/Resume/update')
            .then(ret => {
                wepy.navigateBack()
            })
            .catch(err => {
                log(err)
            })
        }
    }

    onLoad (params) {
        this.userId = params.id
    }

}
</script>

<style lang="less">
@import url('../utils/global');

page {
    background-color: @bg-color;
    flex-direction: column;
    box-sizing: border-box;
}
.block {
    width: 100%;
    flex-direction: column;
    .block-title {
        width: 100%;
        height: 100rpx;
        align-items: center;
        color: @font-color2;
        font-size: 28rpx;
        padding: 0 30rpx;
        text {
            margin-left: 10rpx;
            font-size: 22rpx;
            padding: 0 10rpx;
            height: 24rpx;
            line-height: 24rpx;
            border-radius: 14rpx;
            border: 1px solid @red-color;
            color: @red-color;
        }
    }
    .block-content {
        width: 100%;
        flex-direction: column;
        background-color: #fff;
    }
}
.base-image {
    wwidth: 100%;
    height: 154rpx;
    align-items: center;
    justify-content: space-between;
    padding: 0 40rpx;
    border-bottom: 1px solid @bd-color;
    image {
        width: 120rpx;
        height: 120rpx;
        border: 1px solid @bd-color;
        border-radius: 12rpx;
    }
    view {
        flex: 1;
        padding: 0 30rpx;
        flex-direction: column;
        justify-content: space-between;
        .header-image-name {
            width: 100%;
            height: 30rpx;
            font-size: 30rpx;
            margin-bottom: 20rpx;
        }
        .header-image-text {
            width: 100%;
            line-height: 1.1;
            font-size: 26rpx;
        }
    }
}
.base-input {
    width: 100%;
    height: 100rpx;
    align-items: center;
    padding: 0 40rpx;
    border-bottom: 1px solid @bd-color;
    justify-content: space-between;
    .base-label {
        width: 268rpx;
        font-size: 26rpx;
        color: @font-color2;
    }
    .base-msg {
        flex: 1;
        font-size: 26rpx;
        color: @generate-color;
    }
}
.base-picker {
    width: 100%;
    height: 100rpx;
    font-size: 26rpx;
    padding: 0 40rpx;
    border-bottom: 1px solid @bd-color;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    .picker-wrap {
        width: 100%;
        height: 100%;
        line-height: 100rpx;
        .picker-label {
            width: 268rpx;
            height: 100%;
            color: @font-color2;
        }
        .picker-text {
            width: 410rpx;
            height: 100%;
            color: @generate-color;
        }
    }
}
.base-textarea {
    width: 100%;
    padding: 30rpx 40rpx 40rpx;
    flex-direction: column;
    justify-content: space-around;
    position: relative;
    text {
        font-size: 26rpx;
        color: @font-color2;
        padding-bottom: 30rpx;
    }
    textarea {
        width: 100%;
        height: 320rpx;
        box-sizing: border-box;
        color: #707070;
        line-height: 1.4;
        padding: 12rpx;
        padding-bottom: 30rpx;
        border-radius: 12rpx;
        background-color: @bg-color;
    }
    .num-count {
        position: absolute;
        bottom: 30rpx;
        right: 70rpx;
    }
}
.footer {
    width: 100%;
    height: 120rpx;
    background-color: #fff;
    align-items: center;
    padding: 0 40rpx;
    margin-top: 20rpx;
    justify-content: space-between;
    button {
        height: 80rpx;
        line-height: 80rpx;
        will-change: auto;
        transform: translateZ(0);
        font-size: bold;
        font-size: 28rpx;
        box-sizing: border-box;
        transition: transform 150ms linear;
        margin: 0;
    }
    .left {
        width: 210rpx;
        color: @generate-color;
        border: 1px solid @generate-color;
    }
    .right {
        width: 430rpx;
        background-color: @generate-color;
        color: #fff;
    }
    .btn-active {
        transform: scale(0.9);
    }
}
</style>
